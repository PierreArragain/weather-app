version: "3.8"

volumes:
  postgres_data:
    driver: local

networks:
  weather-app-net:
    driver: bridge

services:
  database-weather-app:
    image: postgres:16.3-alpine3.19
    container_name: database-weather-app
    hostname: database-weather-app
    environment:
      POSTGRES_USER: weather-app
      POSTGRES_PASSWORD: weather-app
      POSTGRES_DB: weather-app
      LANG: en_US.UTF-8
      LANGUAGE: en_US:en
      LC_ALL: en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - weather-app-net
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h database-weather-app -p 5432 -U weather-app || exit 1",
        ]
      interval: 5s
      timeout: 10s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    hostname: backend
    environment:
      POSTGRES_HOST: database-weather-app
      POSTGRES_USERNAME: weather-app
      POSTGRES_PASSWORD: weather-app
      POSTGRES_DB: weather-app
      POSTGRES_PORT: 5432
      OPENWEATHERMAP_API_KEY: 5bf85f31fab557238aa273fc454ba45a
      OPENWEATHERMAP_WEATHER_API_URL: https://api.openweathermap.org/data/2.5/
      LOCATION_API_URL: https://nominatim.openstreetmap.org/search
      JWT_SECRET: MonSuperSecretVraimentTresSecret
      NODE_ENV: production
    depends_on:
      database-weather-app:
        condition: service_healthy
    networks:
      - weather-app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BACKEND_URL: "http://backend:3000"
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - weather-app-net
